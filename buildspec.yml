version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    AWS_ACCOUNT_ID: "207567798584"
    REGION: us-east-1
    FRONTEND_REPO: dev-frontend
    BACKEND_REPO: dev-backend
    FRONTEND_DIR: frontend
    BACKEND_DIR: backend
    K8S_MANIFEST_DIR: k8s
    IMAGE_TAG: latest
    CLUSTER_NAME: kube-cluster
    EKS_KUBECTL_ROLE_ARN: "arn:aws:iam::207567798584:role/eksctl-kube-cluster-cluster-ServiceRole-quAvHhmVUyWq"

phases:
  install:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Installing kubectl...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - kubectl version --short --client
      - echo Installing Helm...
      - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - helm version --short

  pre_build:
    commands:
      - aws sts get-caller-identity
      - echo Setting dynamic image tag...
      - export IMAGE_TAG=v1.${CODEBUILD_BUILD_NUMBER}

      - echo Building the Docker images...
      - echo Updating kubeconfig for EKS cluster...
      - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME
  build:
    commands:
      - echo Building frontend Docker image...
      - docker build -t ${FRONTEND_REPO}:${IMAGE_TAG} ${FRONTEND_DIR}
      - docker tag ${FRONTEND_REPO}:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_REPO}:${IMAGE_TAG}

      - echo Building backend Docker image...
      - docker build -t ${BACKEND_REPO}:${IMAGE_TAG} ${BACKEND_DIR}
      - docker tag ${BACKEND_REPO}:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_REPO}:${IMAGE_TAG}
  post_build:
    commands:
      - echo Pushing frontend image to ECR...
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_REPO}:${IMAGE_TAG}

      - echo Pushing backend image to ECR...
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_REPO}:${IMAGE_TAG}

      - echo Updating Kubernetes manifests...
      - mkdir -p k8s-out

      - sed "s|IMAGE_PLACEHOLDER|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_REPO}:${IMAGE_TAG}|g" $K8S_MANIFEST_DIR/frontend-deployment.yaml > k8s-out/frontend-deployment.yaml
      - sed "s|IMAGE_PLACEHOLDER|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_REPO}:${IMAGE_TAG}|g" $K8S_MANIFEST_DIR/backend-deployment.yaml > k8s-out/backend-deployment.yaml

      - cp $K8S_MANIFEST_DIR/*.yaml k8s-out/
      - echo "Final list of generated Kubernetes YAML files:"
      - find k8s-out/
artifacts:
  base-directory: k8s-out
  discard-paths: yes
  files:
    - '**/*'

cache:
  paths:
    - 'frontend/node_modules/**/*'
    - 'backend/node_modules/**/*'
