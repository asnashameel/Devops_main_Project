version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    AWS_ACCOUNT_ID: "207567798584"
    IMAGE_REPO_NAME_FRONTEND: 207567798584.dkr.ecr.us-east-1.amazonaws.com/dev-frontend:latest
    IMAGE_REPO_NAME_BACKEND: 207567798584.dkr.ecr.us-east-1.amazonaws.com/dev-backend:latest
    IMAGE_TAG: latest
    EKS_CLUSTER_NAME: kube-cluster
    EKS_KUBECTL_ROLE_ARN: "arn:aws:iam::207567798584:role/eksctl-kube-cluster-cluster-ServiceRole-quAvHhmVUyWq"
  parameter-store:
    DB_PASSWORD: /cloudops-demo/db-password

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Installing kubectl...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - kubectl version --short --client
      - echo Installing Helm...
      - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - helm version --short

  pre_build:
    commands:
      - echo Updating kubeconfig...
      - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME --role-arn $EKS_KUBECTL_ROLE_ARN
      - echo Running tests...
      - cd frontend && npm ci && npm test -- --coverage --watchAll=false
      - cd ../backend && npm ci && npm test
      - cd ..
      - echo Build started on `date`
      - echo Building the Docker images...
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  build:
    commands:
      - echo Build started on `date`
      - echo Building the frontend Docker image...
      - cd frontend
      - docker build -t $REPOSITORY_URI_FRONTEND .
      - cd ../backend
      - echo Building the backend Docker image...
      - docker build -t $REPOSITORY_URI_BACKEND .
      - cd ..

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI_FRONTEND
      - docker push $REPOSITORY_URI_BACKEND
      - echo Updating Kubernetes manifests...
      - mkdir -p k8s-out
      - sed -i.bak "s|207567798584.dkr.ecr.us-east-1.amazonaws.com/dev-frontend:latest|$REPOSITORY_URI_FRONTEND:$IMAGE_TAG|g" $k8s/08-frontend-deployment.yaml > k8s-out/frontend-deployment.yaml
      - sed -i.bak "s|207567798584.dkr.ecr.us-east-1.amazonaws.com/dev-backend:latest|$REPOSITORY_URI_BACKEND:$IMAGE_TAG|g" $k8s/07-backend-deployment.yaml > k8s-out/backend-deployment.yaml
      - cp $k8s/*.yaml k8s-out/
      - echo "Final list of generated Kubernetes YAML files:"
      - find k8s-out/
artifacts:
  base-directory: k8s-out
  discard-paths: yes
  files:
    - '**/*'

cache:
  paths:
    - 'frontend/node_modules/**/*'
    - 'backend/node_modules/**/*'
